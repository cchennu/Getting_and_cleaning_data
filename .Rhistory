library(datasets)
data(iris)
?iris
apply(iris[,1],mean)
apply(iris[,1],1,mean)
mean(irirs[,1])
mean(iris[,1])
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(split(mtcars$hp,mtcars$cyl),mean)
a<- sapply(split(mtcars$hp,mtcars$cyl),mean)
a[1]-a[8]
a[1]-a[3]
debug(ls)
ls
library(datasets)
data(iris)
?iris
sapply(split(iris$Sepal.Width,iris$Species),mean)
apply(iris[,1:4],2,mean)
debug(ls)
ls
sapply(split(iris$Sepal.Length,iris$Species),mean)
data(mtcars)
with(mtcars, tapply(mpg, cyl,mean))
debug(ls)
ls
help with
with
help(with)
help(tapply)
help(sapply)
sapply(split(mtcars$hp,mtcars$cyl),mean)
set.seed(1)
rpois(5,2)
summaryRprof()
system.time()
help(system.time())
sysmtem.time(readLines("http://www.northwestern.edu"))
system.time(readLines("http://www.northwestern.edu"))
system.time(readLines("www.google.com"))
system.time(readLines("http://www.google.com"))
install.package("swirl")
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
x<-c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555)
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0.100)
c(1,2,3,4)+c(0.10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list..files
?list.files
args(list.files())
args(list.files
)
old.dir<-getwd()
testdir<-dir.create()
testdir<-dir.create()
? dir.create
getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
files.extsts("mytest.R")
file.extsts("mytest.R")
file.exists("mytest.R")
files.info("mytest.R")
file.info("mytest.R")
?file.rename()
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2',"mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create("testdir2",)
dir.create(file.path('testdir2','testdir3'),recursive = TURE)
dir.create(file.path('testdir2','testdir3'),recursive = TRUE)
unlink("testdir2")
unlink("testdir2",recursive =TRUE)
setwd(old.dir)
unlink("testdir",recursive =TRUE)
system.time(for(i in 1:100) DT[,mean(pwgtp15),by=SEX])
rawdata_test_subject<-read.table("./raw data/test/subject_test.txt")
setwd("C:/Users/Cheng Chen/Dropbox/Courses/Self Learning Courses/Coursera/Getting and Cleaning Data/project")
rawdata_test_subject<-read.table("./raw data/test/subject_test.txt")
rawdata_train_subject<-read.table("./raw data/train/subject_train.txt")
rawdata_subject<-rbind(rawdata_test_subject,rawdata_train_subject)
library(dplyr)
rawdata_subject<-rename(rawdata_subject,Subject=V1)
head(rawdata_subject)
rawdata_test_X<-read.table("./raw data/test/X_test.txt")
rawdata_train_X<-read.table("./raw data/train/X_train.txt")
rawdata_X<-rbind(rawdata_test_X,rawdata_train_X)
features<-read.table("./raw data/features.txt",colClass="character")
feature
features
dim(features)
features=features[,2]
head(features)
features<-read.table("./raw data/features.txt",colClass="character")
names_of_features<-features[,2]
class(names_of_features)
head(names_of_features)
test<-read.table("./raw data/test/X_test.txt",col.names=names_of_features)
head(test[,1:3])
head(test[,1:10])
source("run.analysis.R")
source("run_analysis.R")
run_analysis
setwd("C:/Users/Cheng Chen/Dropbox/Courses/Self Learning Courses/Coursera/Getting and Cleaning Data/project")
run_analysis.R
run_analysis
source("run_analysis.R")
run_analysis
run_analysis()
run_analysis()
source("run_analysis.R")
run_analysis()
head(rawdata[,1:3])
head(select(rawdata,"mean" %in% colnames | "std" %in% colnames))
test<-colnames(rawdata)
dim(test)
test<-colname(rawdata)
test<-names(rawdata)
dim(test)
names(rawdata)
test<-names(rawdata)
class(test)
dim(test)
length(test)
grep(test,"mean")
grep("mean",test)
grep("std",test)
a<-grep("mean",test)
b<-grep("mean",test)
c<-cbind(a,b)
c
c<-c(a,b)
c
ndices_mean<-grep("mean",names(rawdata))
indices_mean<-grep("mean",names(rawdata))
indices_std<-grep("std",names(rawdata))
col_needed<-c(1,2,indices_mean,indices_std)
rawdata_2<-rawdata[,col_needed]
head(rawdata_2)
dim(raw_data_2)
dim(rawdata_2)
col_activity=rawdata[,2]
col_activity
class(activities)
class(activity)
class(col_activities)
class(col_activity)
col_activity<-factor(col_activity, levels = C("a","b","c","d","e","f"))
col_activity<-factor(col_activity, levels=c(1,2,3,4,5,6),lables = C("a","b","c","d","e","f"))
col_activity<-factor(col_activity, levels=c(1,2,3,4,5,6),labels = C("a","b","c","d","e","f"))
col_activity<-factor(as.factor(col_activity), levels=c(1,2,3,4,5,6),labels = C("a","b","c","d","e","f"))
col_activity<-factor(col_activity, levels=c(1,2,3,4,5,6),labels = c("a","b","c","d","e","f"))
col_activity
activities<-read.table("./raw data/test/activity_labels.txt")
activities<-read.table("./raw data/activity_labels.txt")
activities
activity_names<-activities[,2]
raw_data_2[,2]<-factor(raw_data_2[,2], levels=c(1,2,3,4,5,6),labels = activity_names)
rawdata_2[,2]<-factor(rawdata_2[,2], levels=c(1,2,3,4,5,6),labels = activity_names)
rawdata_3<-rawdata_2
head(rawdata_3)
test<-ddply(rawdata_3,.Subject,.Activity,summarize,ave)
library(plyr)
test<-ddply(rawdata_3,.Subject,.Activity,summarize,ave)
test<-ddply(rawdata_3,.(Subject),.(Activity),summarize,ave)
test<-summarize(rawdata$Subject, rawdata$Activity, ave)
test<-summarize(rawdata_3,rawdata_3$Subject, rawdata_3$Activity, ave)
library(reshape)
install.package("reshape")
install.packages("reshape")
library(reshape)
test<-melt(rawdata_3,id=c("Subject","Activity"),measure.vars=names(rawdata_3)[-2])
head(test)
dim(rawdata_3)
test<-melt(rawdata_3,id=c("Subject","Activity"),measure.vars=names(rawdata_3)[3:81])
head(test)
test_2<-dcast(test,Subject~Activity |variable, mean)
library(reshape)
library(reshape2)
test_2<-dcast(test,Subject~Activity |variable, mean)
head(test2)
head(test_2)
test_2<-cast(test,Subject~Activity |variable, mean)
head(test_2)
test_2<-dcast(test,Subject+Activity~variable)
test_2<-dcast(test,Subject+Activity~variable,mean)
head(test_2)
source("run_analysis.R")
run_analysis
run_analysis()
write.table(tidydata,file="tidydata.txt",row.name=FALSE)
run_analysis()
run_analysis()
source("run_analysis.R")
run_analysis()
data<-read.table("tidydata.txt",header=TRUE)
view(data)
View(data)
